services:
  gama-queue-db:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - ${GAMA_QUEUE_DATABASE_PORT:-5432}:5432
    environment:
      POSTGRES_USER: ${GAMA_QUEUE_DATABASE_USER}
      POSTGRES_PASSWORD: ${GAMA_QUEUE_DATABASE_PASSWORD}
      POSTGRES_DB: ${GAMA_QUEUE_DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data

  gama-queue-postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9188:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://${GAMA_QUEUE_DATABASE_USER}:${GAMA_QUEUE_DATABASE_PASSWORD}@${GAMA_QUEUE_DATABASE_HOST}:5433/${GAMA_QUEUE_DATABASE_NAME}?sslmode=disable"
    links:
      - gama-queue-db
      - prometheus

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    container_name: "gama-prometheus"
    ports:
      - "9090:9090"
    volumes:
      - ./:/etc/prometheus

  grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    container_name: "gama-grafana"
    environment:
      - GF_SECURITY_ADMIN_USER=${GAMA_GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GAMA_GRAFANA_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  rabbitmq:
    image: rabbitmq:3.13-management
    restart: unless-stopped
    container_name: gama-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    command: >
      sh -c "
        rabbitmq-plugins enable --offline rabbitmq_prometheus &&
        rabbitmq-server
      "

  gama-queue:
    container_name: gama-queue
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - gama-queue-db
      - rabbitmq

volumes:
  db:
    driver: local
  grafana_data:
    driver: local
